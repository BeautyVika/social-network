{"version":3,"file":"static/js/268.b322a35f.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileAvatar/ProfileAvatar.module.css?47f3","components/Profile/ProfileInfo/ProfileAvatar/ProfileAvatar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/MyPost.module.css?4339","components/Profile/MyPosts/Post/MyPost.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.module.css?bb6c","components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://samurai-way/./src/components/Profile/Profile.module.css?b512","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","../node_modules/@mui/icons-material/CloudUpload.js","../node_modules/@mui/icons-material/FavoriteBorder.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__V-wC3\",\"infoContainer\":\"ProfileInfo_infoContainer__-bhte\",\"name\":\"ProfileInfo_name__XVKHr\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {TextField} from \"@mui/material\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatusWithHooks = (props: ProfileStatusPropsType) => {\r\n\r\n    let [editMode, setEditeMode] = useState<boolean>(false)\r\n    let [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditeMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditeMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange =(e: ChangeEvent<HTMLInputElement>) => {\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <span style={{fontSize: '18px', fontWeight: '700', color: '#CA9CE1'}}>Status ---</span>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span style={{\r\n                            fontSize: '18px',\r\n                            fontStyle: 'italic',\r\n                            minWidth: '100px',\r\n                            minHeight: '12px',\r\n                            cursor: 'pointer',\r\n                        }}\r\n                              onDoubleClick={activateEditMode}>\r\n                            {props.status || 'No status'}\r\n                        </span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <TextField onChange={onStatusChange}\r\n                                   onBlur={deactivateEditMode}\r\n                                   value={status}\r\n                                   color='secondary'\r\n                                   variant=\"standard\"\r\n                                   autoFocus/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && _extends({\n  color: (theme.vars || theme).palette.background.default\n}, theme.vars ? {\n  backgroundColor: theme.vars.palette.Avatar.defaultBg\n} : {\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfileAvatar_container__Uu3lD\"};","import React, {ChangeEvent, FC} from 'react'\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload'\r\nimport { IconButton } from '@mui/material'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport defaultAvatar from \"assets/img/user.webp\"\r\nimport s from \"components/Profile/ProfileInfo/ProfileAvatar/ProfileAvatar.module.css\"\r\n\r\ntype ProfileAvatarPropsType = {\r\n    avatar: string\r\n    withButton?: boolean\r\n    size: number\r\n    changePhotoTC?: (photo: File) => void\r\n}\r\n\r\nconst ProfileAvatar: FC<ProfileAvatarPropsType> = (\r\n    {avatar, withButton, size, changePhotoTC}) => {\r\n\r\n    const onChangePhoto = (event: ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.files && event.target.files.length > 0)\r\n            changePhotoTC?.(event.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <Avatar\r\n                src={avatar ? avatar : defaultAvatar}\r\n                style={{ width: `${size}px`, height: `${size}px`, position: 'absolute', bottom: '-117px',\r\n                    left: '120px'}}\r\n                alt=\"ava\"\r\n            />\r\n            {withButton && (\r\n                <label>\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={onChangePhoto}\r\n                        style={{ display: 'none' }}\r\n                        accept=\"image/png, image/jpeg, image/svg\"\r\n                    />\r\n                    <IconButton\r\n                        component=\"span\"\r\n                        style={{\r\n                            fontSize: '2.5rem',\r\n                            position: 'absolute',\r\n                            bottom: '-114px',\r\n                            right: '121px',\r\n                            border: '1px solid #CA9CE1',\r\n                        }}\r\n                    >\r\n                        <CloudUploadIcon />\r\n                    </IconButton>\r\n                </label>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileAvatar","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from \"redux/ProfileReducer\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\"\r\nimport ProfileStatusWithHooks from \"components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks\"\r\nimport ProfileAvatar from \"components/Profile/ProfileInfo/ProfileAvatar/ProfileAvatar\"\r\nimport Paper from '@mui/material/Paper'\r\n\r\ntype ProfileInfoProps = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    changePhotoTC: (photo: File) => void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoProps) => {\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n                <Paper elevation={3} component={\"div\"} sx={{height: '400px', width: '100%'}}>\r\n                    <ProfileAvatar avatar={props.profile?.photos.large}\r\n                                   changePhotoTC={props.changePhotoTC}\r\n                                   withButton\r\n                                   size={200}/>\r\n                    {/*<img src={props.profile?.photos.large} alt='avatar'/>*/}\r\n                    <div className={s.infoContainer}>\r\n                        <div className={s.name}>{props.profile?.fullName}</div>\r\n                        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                    </div>\r\n                    {/*<p>{props.profile.aboutMe}</p>*/}\r\n                </Paper>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__a+JeC\",\"posts\":\"MyPosts_posts__RKFX1\"};","// extracted by mini-css-extract-plugin\nexport default {\"itemContainer\":\"MyPost_itemContainer__f0WTd\",\"itemPhoto\":\"MyPost_itemPhoto__5jBwn\",\"likeContainer\":\"MyPost_likeContainer__Y6Vha\"};","import React from 'react';\r\nimport s from './MyPost.module.css'\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder'\r\nimport defaultImg from \"../../../../assets/img/user.webp\"\r\n\r\ntype MyPostPropsType = {\r\n    id?: number\r\n    message: string\r\n    likesCount: number\r\n    avatar: string\r\n}\r\n\r\nconst MyPost = (props: MyPostPropsType) => {\r\n    return (\r\n        <div className={s.itemContainer}>\r\n\r\n            <img src={props.avatar || defaultImg} alt='avatar' className={s.itemPhoto}/>\r\n            {props.message}\r\n\r\n\r\n            <div className={s.likeContainer}>\r\n                <FavoriteBorderIcon fontSize='small'/>\r\n                <div> {props.likesCount}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MyPost;","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"AddNewPostForm_field__GAHUL\"};","import React from \"react\"\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\"\r\nimport {Textarea} from \"components/Common/FormsControls/FormsControls\"\r\nimport {maxLengthCreator, required} from \"utils/validators/validators\"\r\nimport {MyPostFormType} from \"components/Profile/MyPosts/MyPosts\"\r\nimport s from './AddNewPostForm.module.css'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<MyPostFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.field}>\r\n                <Field component={Textarea}\r\n                       // style={{width: '90%', border: '2px solid #CA9CE1'}}\r\n                       name='newPostText'\r\n                       validate={[required, maxLength10]}\r\n                       placeholder='Post message'/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddNewPostFormRedux = reduxForm<MyPostFormType>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)","import React, {memo} from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/MyPost'\r\nimport {MyPostsPropsType} from \"./MyPostsContainer\"\r\nimport Paper from '@mui/material/Paper'\r\nimport {AddNewPostFormRedux} from \"components/Profile/MyPosts/AddNewPostForm/AddNewPostForm\";\r\n\r\n export type MyPostFormType = {\r\n    newPostText: string\r\n}\r\n\r\nconst MyPosts = memo((props: MyPostsPropsType) => {\r\n\r\n    let postsElement = props.profilePage.posts.map(p =>\r\n        <Post avatar={props.profilePage.profile.photos.large} key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (values: MyPostFormType) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <Paper elevation={3} component={\"div\"} sx={{width: '100%'}}>\r\n                <h3>My posts</h3>\r\n\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n\r\n                <div className={s.posts}>\r\n                    {postsElement}\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC, ProfileReducerType} from \"../../../redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"redux/reduxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype MapStatePropsType ={\r\n    profilePage: ProfileReducerType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPost: (message: string) => void\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) : MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostAC(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profileContainer\":\"Profile_profileContainer__qljcb\"};","import React from 'react'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\"\r\nimport {PostType, ProfileType} from \"redux/ProfileReducer\"\r\nimport s from \"./Profile.module.css\"\r\nimport Preloader from \"components/Common/Preloader/Preloader\"\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType | null\r\n    posts: Array<PostType>\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    changePhotoTC: (photo: File) => void\r\n    isAuth: boolean\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n\r\n    if(!props.isAuth) {\r\n        return <Redirect to='/login' />\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div >\r\n                <img style={{ width: '101%', height:' 300px',objectFit: 'cover', borderRadius: '0%'}} alt='big content'\r\n                     src='https://wallpapershome.ru/images/pages/pic_h/182.jpg'/>\r\n            </div>\r\n\r\n            <div className={s.profileContainer}>\r\n                <ProfileInfo profile={props.profile}\r\n                             changePhotoTC={props.changePhotoTC}\r\n                             status={props.status}\r\n                             updateStatus={props.updateStatus}/>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changePhotoTC,\r\n    getStatus,\r\n    getUserProfile,\r\n    PostType,\r\n    ProfileType,\r\n    updateStatus\r\n} from \"../../redux/ProfileReducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null\r\n    posts: Array<PostType>\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n    changePhotoTC: (photo: File) => void\r\n}\r\n\r\ntype ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype DataContainerComponentType = ProfileContainerPropsType & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<DataContainerComponentType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = `${this.props.authorizedUserId}`\r\n            if(!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    render (){\r\n        return <Profile {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    posts: state.profilePage.posts,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose <React.ComponentType>(\r\n\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, changePhotoTC}),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');\nexports.default = _default;"],"names":["props","useState","editMode","setEditeMode","status","setStatus","useEffect","style","display","flexDirection","fontSize","fontWeight","color","fontStyle","minWidth","minHeight","cursor","onDoubleClick","TextField","onChange","e","currentTarget","value","onBlur","updateStatus","variant","autoFocus","createSvgIcon","_jsx","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","styled","name","overridesResolver","styles","ownerState","root","colorDefault","theme","_extends","position","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","pxToRem","lineHeight","borderRadius","overflow","userSelect","vars","shape","palette","background","default","backgroundColor","Avatar","defaultBg","mode","grey","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useThemeProps","alt","childrenProp","children","className","component","imgProps","sizes","src","srcSet","other","_objectWithoutPropertiesLoose","loaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","slots","composeClasses","useUtilityClasses","as","clsx","avatar","withButton","size","changePhotoTC","s","defaultAvatar","bottom","left","type","event","target","files","length","accept","IconButton","right","border","CloudUpload","profile","Paper","elevation","sx","photos","large","fullName","Preloader","defaultImg","message","FavoriteBorder","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Textarea","validate","required","placeholder","memo","postsElement","profilePage","posts","map","p","id","values","addPost","newPostText","connect","state","dispatch","addPostAC","MyPosts","isAuth","to","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","withRouter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","jsx"],"sourceRoot":""}